<!-- views/inspections/show.ejs -->
<!DOCTYPE html>
<html lang="en" class="h-full bg-slate-50">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Inspection <%= inspection.code %></title>

    <!-- Tailwind (CDN) -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: { boxShadow: { soft: '0 6px 24px rgba(0,0,0,.06)' } }
        }
      }
    </script>

    <style>
      /* ---------------- Screen vs Print toggles ---------------- */
      .print-only { display: none; }

      /* Wheel diagram dots for SCREEN */
      .wheel-print{
        position:absolute; width:22%; aspect-ratio:1/1; border-radius:9999px;
        transform: translate(-50%,-50%);
        border:2px solid #94a3b8; background:#fff;
        display:flex; align-items:center; justify-content:center;
        font-weight:800; font-size:11px; color:#0f172a;
        left: var(--left); top: var(--top);
        box-shadow: inset 0 0 0 2px rgba(255,255,255,.8), 0 1px 2px rgba(0,0,0,.08);
      }
      .wheel-print.ok   { border-color:#16a34a; background:#bbf7d0; color:#065f46; }
      .wheel-print.adv  { border-color:#f59e0b; background:#fde68a; color:#7c5206; }
      .wheel-print.fail { border-color:#ef4444; background:#fecaca; color:#7f1d1d; }

      /* Row tinting for screen (subtle) */
      .row-ok   { background: rgba(16,185,129,.14); }
      .row-adv  { background: rgba(245,158,11,.16); }
      .row-fail { background: rgba(239,68,68,.16); }

      .table-scroll { max-height: 60vh; overflow:auto; -webkit-overflow-scrolling: touch; }

      /* Tiny colour tokens for legend (screen) */
      .swatch{ width:10px; height:10px; border-radius:9999px; display:inline-block; box-shadow: inset 0 0 0 2px rgba(255,255,255,.9), 0 0 0 1px rgba(0,0,0,.06); }
      .sw-ok   { background:#22c55e; }
      .sw-adv  { background:#f59e0b; }
      .sw-fail { background:#ef4444; }

      /* ---------------------- PRINT: one-page sheet ---------------------- */
      @media print {
        html, body { background:#fff !important; }
        .screen-root { display: none !important; }
        .print-only { display: block !important; }

        @page { size: A4 portrait; margin: 10mm; }

        /* Tight typography & spacing to fit one page */
        .print-sheet { font-size: 10.5px; line-height: 1.25; color: #0f172a; }
        .print-title { font-size: 16px; font-weight: 700; }
        .print-muted { color: #475569; }
        .print-table { border-collapse: collapse; width: 100%; table-layout: fixed; }
        .print-table th, .print-table td { border: 1px solid #cbd5e1; padding: 3px 5px; vertical-align: top; }
        .print-table th { background: #f1f5f9; }

        /* Column width control to prevent wrapping onto a second page */
        .col-pos   { width: 16%; }
        .col-size  { width: 12%; }
        .col-brand { width: 12%; }
        .col-model { width: 12%; }
        .col-dot   { width: 10%; }
        .col-tread { width: 20%; }
        .col-tags  { width: 10%; }
        .col-cond  { width: 8%;  }

        /* Diagram: keep small */
        .print-diagram { max-width: 130px; }
        .wheel-dot {
          position:absolute; width:20%; aspect-ratio:1/1; border-radius:9999px;
          transform: translate(-50%,-50%);
          border:1px solid #94a3b8; background:#fff;
          font-weight:700; font-size:9px; display:flex; align-items:center; justify-content:center;
          left: var(--left); top: var(--top);
        }
        .wheel-dot.ok   { background:#d1fae5; border-color:#10b981; }
        .wheel-dot.adv  { background:#fef3c7; border-color:#f59e0b; }
        .wheel-dot.fail { background:#fee2e2; border-color:#ef4444; }
      }
    </style>
  </head>
  <body class="h-full">

    <% /* ---------- Shared helpers & derived data (used by both views) ---------- */ %>
    <%
      const fmt = (v) => (v ?? "") === "" ? "—" : v;

      const rank = (c) => c === 'fail' ? 3 : (c === 'advisory' ? 2 : (c === 'ok' ? 1 : 0));
      const worstOf = (a, b) => {
        const ra = rank(a), rb = rank(b);
        if (ra === 0 && rb === 0) return "—";
        return (rb > ra) ? b : a;
      };

      const deriveFromData = (node) => {
        const tags = Array.isArray(node?.tags) ? node.tags : [];
        const failTags = new Set(["Bulge","Cord exposed","Puncture"]);
        const advTags  = new Set(["Perished","Cracked sidewall","Uneven wear","Bald on inner edge","Bald on outer edge"]);

        let tagCond = null;
        if (tags.some(t => failTags.has(String(t)))) tagCond = "fail";
        else if (tags.some(t => advTags.has(String(t)))) tagCond = "advisory";

        const t = node?.treadDepth || {};
        const vals = [t.inner, t.middle, t.outer].map(Number).filter(n => !isNaN(n));
        let treadCond = null;
        if (vals.length) {
          if (vals.some(v => v < 3)) treadCond = "fail";
          else if (vals.some(v => v < 4)) treadCond = "advisory";
          else treadCond = "ok";
        }

        if (!tagCond && !treadCond) return "—";
        if (tagCond && !treadCond) return tagCond;
        if (!tagCond && treadCond) return treadCond;
        return worstOf(tagCond, treadCond);
      };

      const finalCondition = (node) => {
        const explicit = node?.condition ? String(node.condition).toLowerCase() : null;
        const derived  = deriveFromData(node);
        if (!explicit && derived !== "—") return derived;
        if (explicit && derived === "—") return explicit;
        if (!explicit && derived === "—") return "—";
        return worstOf(explicit, derived);
      };

      const classForWheel = (cond) => cond === "ok" ? "ok" : (cond === "advisory" ? "adv" : (cond === "fail" ? "fail" : ""));

      const tyres = {
        "Offside Front (OSF)": inspection.offside?.front || {},
        "Nearside Front (NSF)": inspection.nearside?.front || {},
        "Offside Rear (OSR)":  inspection.offside?.rear  || {},
        "Nearside Rear (NSR)": inspection.nearside?.rear || {},
      };

      const wheelPos = [
        {k:"OSF", label:"Offside Front (OSF)", left:"86%", top:"19%"},
        {k:"NSF", label:"Nearside Front (NSF)", left:"14%", top:"19%"},
        {k:"OSR", label:"Offside Rear (OSR)",  left:"86%", top:"81%"},
        {k:"NSR", label:"Nearside Rear (NSR)", left:"14%", top:"81%"},
      ];

      const createdAtStr = inspection.createdAt ? new Date(inspection.createdAt).toLocaleString() : null;

      var vehicleLine = "";
      if (inspection.vehicle) {
        vehicleLine = (inspection.vehicle.make || "") + " " + (inspection.vehicle.model || "");
        vehicleLine = vehicleLine.trim();
        if (inspection.vehicle.year) vehicleLine += " (" + inspection.vehicle.year + ")";
      }

      const tagsText = (t) => {
        const arr = Array.isArray(t?.tags) ? t.tags : [];
        return arr.join(", ");
      };
      const short = (str, n) => {
        str = String(str || "");
        return str.length > n ? (str.slice(0, n - 1) + "…") : str;
      };
    %>

    <!-- ======================= SCREEN LAYOUT (unchanged) ======================= -->
    <div class="screen-root mx-auto max-w-6xl px-3 sm:px-4 py-4 sm:py-6">

      <!-- Back link -->
      <div class="mb-3 sm:mb-4">
        <a href="/" class="inline-flex items-center gap-2 text-slate-600 hover:text-slate-800">
          <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor"><path d="M15 19l-7-7 7-7"/></svg>
          Home
        </a>
      </div>

      <!-- Top card: title + VRM + small icon buttons -->
      <div class="rounded-2xl bg-white border border-slate-200 shadow-soft p-4 sm:p-5 mb-4">
        <div class="flex items-center justify-between">
          <div class="flex items-center gap-3 sm:gap-4">
            <!-- VRM plate -->
            <span class="inline-flex items-center rounded-md text-black text-sm sm:text-base font-extrabold tracking-widest px-3 py-1 select-none"
                  style="background:linear-gradient(90deg,#ffeb3b 0 74%, #1e88e5 74% 100%);">
              <%= inspection.vrm %>
              <small class="ml-2 text-white font-semibold tracking-normal">UK</small>
            </span>
            <div class="min-w-0">
              <div class="text-lg sm:text-xl font-semibold text-slate-900 leading-tight">Tyre Inspection Report</div>
            </div>
          </div>

          <!-- Icon-only actions -->
          <div class="flex items-center gap-1.5">
            <button type="button" id="copyLink" class="inline-flex items-center justify-center h-9 w-9 rounded-md border border-slate-300 text-slate-700 hover:bg-slate-50" aria-label="Copy link" title="Copy link">
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor"><rect x="9" y="9" width="11" height="11" rx="2"/><rect x="4" y="4" width="11" height="11" rx="2"/></svg>
            </button>
            <button type="button" id="printBtn" class="inline-flex items-center justify-center h-9 w-9 rounded-md bg-slate-900 text-white hover:bg-slate-800" aria-label="Print" title="Print">
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor"><path d="M6 9V3h12v6"/><path d="M6 18H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2"/><path d="M6 14h12v8H6z"/></svg>
            </button>
          </div>
        </div>
      </div>

      <!-- Content grid -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6 mt-4 sm:mt-6">

        <!-- Diagram -->
        <div class="rounded-2xl bg-white border border-slate-200 shadow-soft p-4 order-2 lg:order-1">
          <h2 class="text-sm font-semibold text-slate-900 mb-3">Tyre positions</h2>
          <div class="relative" style="max-width:240px;margin:0 auto;">
            <svg viewBox="0 0 400 800" class="w-full h-auto">
              <rect x="60" y="60" width="280" height="680" rx="40" fill="#f1f5f9" stroke="#cbd5e1"/>
              <rect x="80" y="80" width="240" height="120" rx="20" fill="#e2e8f0"/>
              <rect x="80" y="600" width="240" height="120" rx="20" fill="#e2e8f0"/>
              <rect x="90" y="240" width="220" height="280" rx="16" fill="#e5e7eb"/>
            </svg>
            <% for (const w of wheelPos) {
                 const node = tyres[w.label] || {};
                 const cond = finalCondition(node);
            %>
              <div
                class="wheel-print <%= classForWheel(cond) %>"
                style="--left:<%= w.left %>; --top:<%= w.top %>;"
                title="<%= w.label %> — <%= cond %>"
              ><%= w.k %></div>
            <% } %>
          </div>
        </div>

        <!-- Details card -->
        <div class="lg:col-span-2 rounded-2xl bg-white border border-slate-200 shadow-soft p-0 order-1 lg:order-2">
          <!-- Meta bar -->
          <div class="px-4 sm:px-5 py-3 border-b border-slate-200 bg-slate-50/60 text-[13px] sm:text-sm text-slate-700 flex flex-wrap gap-x-4 gap-y-1">
            <span><span class="font-medium">Code:</span> <span class="font-mono"><%= inspection.code %></span></span>
            <% if (typeof inspection.mileage === "number") { %>
              <span><span class="font-medium">Mileage:</span> <%= inspection.mileage %></span>
            <% } %>
            <% if (createdAtStr) { %>
              <span><span class="font-medium">Date:</span> <%= createdAtStr %></span>
            <% } %>
            <% if (vehicleLine) { %>
              <span><span class="font-medium">Vehicle:</span> <%= vehicleLine %></span>
            <% } %>
            <% if (inspection.vehicle?.torque) { %>
              <span><span class="font-medium">Torque:</span> <%= inspection.vehicle.torque %> Nm</span>
            <% } %>
            <% if (inspection.notes) { %>
              <span class="basis-full text-slate-600"><span class="font-medium">Notes:</span> <%= inspection.notes %></span>
            <% } %>
          </div>

          <!-- Legend -->
          <div class="px-4 sm:px-5 py-2 border-b border-slate-200 bg-white text-[12px] sm:text-[13px] text-slate-700 flex flex-wrap items-center gap-2">
            <span class="inline-flex items-center gap-2"><span class="swatch sw-ok"></span> <span>OK</span></span>
            <span class="inline-flex items-center gap-2"><span class="swatch sw-adv"></span> <span>Advisory</span></span>
            <span class="inline-flex items-center gap-2"><span class="swatch sw-fail"></span> <span>Fail</span></span>
          </div>

          <!-- Mobile cards -->
          <div class="md:hidden divide-y divide-slate-200">
            <% for (const [pos, t] of Object.entries(tyres)) { const cond = finalCondition(t); %>
              <div class="p-4">
                <div class="flex items-start justify-between gap-3">
                  <div class="font-semibold text-slate-900"><%= pos %></div>
                  <span class="text-[11px] capitalize px-2 py-0.5 rounded-full border
                    <%= cond==='ok'?'bg-emerald-200 text-emerald-800 border-emerald-600':
                        cond==='advisory'?'bg-amber-200 text-amber-800 border-amber-600':
                        cond==='fail'?'bg-rose-200 text-rose-800 border-rose-600':'bg-slate-100 text-slate-700 border-slate-300' %>"><%= cond %></span>
                </div>
                <dl class="mt-2 grid grid-cols-2 gap-x-3 gap-y-1.5 text-[13px]">
                  <dt class="text-slate-500">Size</dt><dd class="text-right text-slate-900"><%= fmt(t.size) %></dd>
                  <dt class="text-slate-500">Brand</dt><dd class="text-right text-slate-900"><%= fmt(t.brand) %></dd>
                  <dt class="text-slate-500">Model</dt><dd class="text-right text-slate-900"><%= fmt(t.model) %></dd>
                  <dt class="text-slate-500">DOT</dt><dd class="text-right text-slate-900"><%= fmt(t.dot) %></dd>
                  <dt class="text-slate-500">Tread</dt>
                  <dd class="text-right text-slate-900"><%= fmt(t?.treadDepth?.inner) %> / <%= fmt(t?.treadDepth?.middle) %> / <%= fmt(t?.treadDepth?.outer) %></dd>
                </dl>
                <% if ((Array.isArray(t?.tags) && t.tags.length) || t?.notes) { %>
                  <div class="mt-2 space-y-1 text-xs">
                    <% if (Array.isArray(t?.tags) && t.tags.length) { %>
                      <div><strong>Tags:</strong> <%= t.tags.join(", ") %></div>
                    <% } %>
                    <% if (t?.notes) { %>
                      <div><strong>Notes:</strong> <%= t.notes %></div>
                    <% } %>
                  </div>
                <% } %>
              </div>
            <% } %>
          </div>

          <!-- Desktop table -->
          <div class="hidden md:block">
            <div class="table-scroll rounded-2xl">
              <table class="min-w-[860px] w-full text-sm">
                <thead class="bg-slate-100 sticky top-0 z-10">
                  <tr>
                    <th class="text-left px-4 py-2">Position</th>
                    <th class="text-left px-4 py-2">Size</th>
                    <th class="text-left px-4 py-2">Brand</th>
                    <th class="text-left px-4 py-2">Model</th>
                    <th class="text-left px-4 py-2">DOT</th>
                    <th class="text-left px-4 py-2">Tread (In / Mid / Out)</th>
                    <th class="text-left px-4 py-2">Tags</th>
                    <th class="text-left px-4 py-2">Condition</th>
                  </tr>
                </thead>
                <tbody class="divide-y divide-slate-200">
                  <% for (const [pos, t] of Object.entries(tyres)) {
                       const cond = finalCondition(t);
                       const tagStr = tagsText(t) || "—";
                       const rowCls = cond==='ok' ? 'row-ok' : cond==='advisory' ? 'row-adv' : cond==='fail' ? 'row-fail' : '';
                  %>
                    <tr class="<%= rowCls %>">
                      <td class="px-4 py-2 font-medium text-slate-900"><%= pos %></td>
                      <td class="px-4 py-2"><%= fmt(t.size) %></td>
                      <td class="px-4 py-2"><%= fmt(t.brand) %></td>
                      <td class="px-4 py-2"><%= fmt(t.model) %></td>
                      <td class="px-4 py-2"><%= fmt(t.dot) %></td>
                      <td class="px-4 py-2"><%= fmt(t?.treadDepth?.inner) %> / <%= fmt(t?.treadDepth?.middle) %> / <%= fmt(t?.treadDepth?.outer) %></td>
                      <td class="px-4 py-2"><%= tagStr %></td>
                      <td class="px-4 py-2">
                        <span class="inline-flex items-center text-xs capitalize px-2 py-0.5 rounded-full border
                          <%= cond==='ok'?'bg-emerald-200 text-emerald-900 border-emerald-700':
                              cond==='advisory'?'bg-amber-200 text-amber-900 border-amber-700':
                              cond==='fail'?'bg-rose-200 text-rose-900 border-rose-700':'bg-slate-100 text-slate-800 border-slate-400' %>"><%= cond %></span>
                      </td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div> <!-- /details -->
      </div> <!-- /content -->
    </div>

    <!-- ======================= PRINT-ONLY ONE-PAGE SHEET ======================= -->
    <div class="print-only print-sheet">
      <!-- Header -->
      <div class="mb-2">
        <div class="print-title">Tyre Inspection Report</div>
        <div class="print-muted" style="margin-top: 2px;">
          <strong>VRM:</strong> <%= inspection.vrm %>
          &nbsp;|&nbsp; <strong>Code:</strong> <%= inspection.code %>
          <% if (typeof inspection.mileage === "number") { %>
            &nbsp;|&nbsp; <strong>Mileage:</strong> <%= inspection.mileage %>
          <% } %>
          <% if (createdAtStr) { %>
            &nbsp;|&nbsp; <strong>Date:</strong> <%= createdAtStr %>
          <% } %>
        </div>
        <% if (vehicleLine || inspection.vehicle?.torque) { %>
          <div class="print-muted" style="margin-top: 2px;">
            <% if (vehicleLine) { %><strong>Vehicle:</strong> <%= vehicleLine %><% } %>
            <% if (inspection.vehicle?.torque) { %> &nbsp;|&nbsp; <strong>Torque:</strong> <%= inspection.vehicle.torque %> Nm <% } %>
          </div>
        <% } %>
      </div>

      <!-- Tiny car diagram (centered, small) -->
      <div style="display:flex; justify-content:center; margin: 4px 0 6px;">
        <div class="print-diagram" style="position:relative; width:130px;">
          <svg viewBox="0 0 400 800" style="width:100%;height:auto;">
            <rect x="60" y="60" width="280" height="680" rx="40" fill="#f1f5f9" stroke="#cbd5e1"/>
            <rect x="80" y="80" width="240" height="120" rx="20" fill="#e2e8f0"/>
            <rect x="80" y="600" width="240" height="120" rx="20" fill="#e2e8f0"/>
            <rect x="90" y="240" width="220" height="280" rx="16" fill="#e5e7eb"/>
          </svg>
          <% for (const w of wheelPos) {
               const node = tyres[w.label] || {};
               const cond = finalCondition(node);
          %>
            <div class="wheel-dot <%= classForWheel(cond) %>" style="--left:<%= w.left %>; --top:<%= w.top %>;"><%= w.k %></div>
          <% } %>
        </div>
      </div>

      <!-- Compact legend (grayscale-friendly via text) -->
      <div class="print-muted" style="margin-bottom: 6px;">
        <strong>Legend:</strong> OK / Advisory / Fail
      </div>

      <!-- One compact table (fixed widths, tight padding) -->
      <table class="print-table">
        <colgroup>
          <col class="col-pos" />
          <col class="col-size" />
          <col class="col-brand" />
          <col class="col-model" />
          <col class="col-dot" />
          <col class="col-tread" />
          <col class="col-tags" />
          <col class="col-cond" />
        </colgroup>
        <thead>
          <tr>
            <th>Position</th>
            <th>Size</th>
            <th>Brand</th>
            <th>Model</th>
            <th>DOT</th>
            <th>Tread (I/M/O)</th>
            <th>Tags</th>
            <th>Cond.</th>
          </tr>
        </thead>
        <tbody>
          <% for (const [pos, t] of Object.entries(tyres)) {
               const cond = finalCondition(t);
               const tagStr = short(tagsText(t), 40) || "—";
          %>
            <tr>
              <td><%= pos %></td>
              <td><%= fmt(t.size) %></td>
              <td><%= fmt(t.brand) %></td>
              <td><%= fmt(t.model) %></td>
              <td><%= fmt(t.dot) %></td>
              <td><%= fmt(t?.treadDepth?.inner) %> / <%= fmt(t?.treadDepth?.middle) %> / <%= fmt(t?.treadDepth?.outer) %></td>
              <td><%= tagStr %></td>
              <td style="text-transform: capitalize;"><%= cond %></td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <!-- JS for screen actions -->
    <script>
      (function () {
        // Copy link
        const copyBtn = document.getElementById("copyLink");
        if (copyBtn) {
          copyBtn.addEventListener("click", async () => {
            const url = new URL(window.location.origin + "/inspections");
            url.searchParams.set("code", "<%= inspection.code %>");
            try {
              await navigator.clipboard.writeText(url.toString());
              copyBtn.setAttribute("aria-label","Copied");
              copyBtn.title = "Copied";
              copyBtn.classList.add("ring-2","ring-emerald-400");
              setTimeout(() => {
                copyBtn.removeAttribute("aria-label");
                copyBtn.title = "Copy link";
                copyBtn.classList.remove("ring-2","ring-emerald-400");
              }, 1200);
            } catch {
              prompt("Copy this link:", url.toString());
            }
          });
        }

        // Print
        const printBtn = document.getElementById("printBtn");
        if (printBtn) {
          printBtn.addEventListener("click", (e) => {
            e.preventDefault();
            window.focus();
            requestAnimationFrame(() => setTimeout(() => window.print(), 0));
          });
        }
      })();
    </script>
  </body>
</html>
