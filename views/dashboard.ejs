<!DOCTYPE html>
<html lang="en" class="h-full bg-slate-50">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title><%= typeof title !== 'undefined' ? title : 'Dashboard — Tyre Inspector' %></title>

    <!-- Tailwind (CDN) -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- HTMX (VRM modal lookup) -->
    <script
      src="https://cdn.jsdelivr.net/npm/htmx.org@2.0.6/dist/htmx.min.js"
      integrity="sha384-Akqfrbj/HpNVo8k11SXBb6TlBWmXXlYQrCSqEWmyKJe+hDm3Z/B2WVG4smwBkRVm"
      crossorigin="anonymous"></script>

    <style>
      body {
        background:
          radial-gradient(1000px 400px at 10% -10%, rgba(63, 135, 245, 0.08), transparent 60%),
          radial-gradient(900px 300px at 110% -20%, rgba(63, 135, 245, 0.06), transparent 60%),
          #f8fafc;
      }
      .uk-plate { background: linear-gradient(90deg, #ffeb3b 0 74%, #1e88e5 74% 100%); }
      @media (prefers-reduced-motion: reduce){ *{ animation:none!important; transition:none!important; } }
    </style>
  </head>

  <body class="h-full">
    <% /* ---------- View helpers derived from controller data ---------- */ %>
    <%
      const limited = typeof dailyLimit === 'number' && dailyLimit > 0;
      const noneLeft = limited && remaining === 0;
      const pct = limited ? Math.min(100, Math.round((usedToday / Math.max(1, dailyLimit)) * 100)) : 0;
      const pageNum = Number(page || 1);
      const pagesNum = Number(pages || 1);
      const qsp = (p) => {
        const u = new URLSearchParams(typeof query === 'object' ? query : {});
        u.set('page', String(p));
        return '?' + u.toString();
      };
      const justCreated = (query && typeof query.created === 'string' && query.created.trim()) ? query.created.trim() : null;
    %>

    <!-- Top Nav -->
    <nav class="sticky top-0 z-40 bg-white/80 backdrop-blur border-b border-slate-200" aria-label="Primary">
      <div class="mx-auto max-w-6xl px-4 py-3 flex items-center justify-between">
        <a href="/" class="inline-flex items-center gap-2 font-semibold text-slate-800">
          <svg class="w-5 h-5 text-sky-600" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
            <path d="M21 12a9 9 0 1 0-3.46 7.07l.71-.71"/><path d="M14 10l7-7"/>
          </svg>
          Tyre Inspector
        </a>

        <!-- If your app expects POST for logout, convert this to a small form -->
        <div class="text-sm">
          <a href="/logout" class="text-slate-700 hover:text-slate-900">Logout</a>
        </div>
      </div>
    </nav>

    <!-- Success banner (after creating an inspection) -->
    <% if (justCreated) { %>
      <div class="mx-auto max-w-6xl px-4 mt-4">
        <div class="rounded-lg border border-emerald-300 bg-emerald-50 text-emerald-900 px-3 py-2 text-sm flex items-center justify-between">
          <span>Inspection <span class="font-mono font-semibold"><%= justCreated %></span> created.</span>
          <a class="inline-flex items-center gap-1 text-emerald-800 underline hover:text-emerald-900"
             href="/inspections?code=<%= justCreated %>">
            Open
            <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor"><path d="M5 12h13m-6-7l7 7-7 7"/></svg>
          </a>
        </div>
      </div>
    <% } %>

    <!-- Header -->
    <header class="text-center py-10">
      <div class="mx-auto max-w-3xl px-4">
        <span class="uk-plate inline-flex items-center rounded-md text-black text-base font-extrabold tracking-widest px-3 py-1 select-none">
          <%= typeof samplePlate !== 'undefined' ? samplePlate : 'NU59 WEP' %>
          <small class="ml-2 text-white font-semibold tracking-normal">UK</small>
        </span>
        <h1 class="mt-5 text-3xl sm:text-4xl font-extrabold text-slate-900">Dashboard</h1>
        <p class="mt-3 text-slate-600">Create a new inspection or review your recent ones.</p>

        <!-- Create Inspection button + usage pill -->
        <div class="mt-6 flex items-center justify-center gap-3">
          <button
            type="button"
            data-open-modal
            <%= noneLeft ? 'disabled aria-disabled="true"' : '' %>
            class="inline-flex items-center gap-2 rounded-xl px-5 py-3 text-white font-semibold focus:outline-none focus:ring-2 focus:ring-sky-500
                   <%= noneLeft ? 'bg-slate-400 cursor-not-allowed' : 'bg-sky-600 hover:bg-sky-700' %>">
            <svg class="w-5 h-5 text-white" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2h6z"/></svg>
            Create Inspection
          </button>

          <span class="inline-flex items-center gap-2 rounded-full border px-3 py-1 text-sm
                       <%= noneLeft ? 'border-rose-300 bg-rose-50 text-rose-700' : 'border-emerald-300 bg-emerald-50 text-emerald-700' %>">
            <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
              <path d="M12 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20Zm1-10h5v2h-7V6h2v6Z"/>
            </svg>
            <%= limited ? (noneLeft ? '0 left today' : (remaining + ' left today')) : 'Unlimited' %>
          </span>
        </div>

        <% if (limited) { %>
          <div class="mt-3 mx-auto max-w-md text-left">
            <div class="flex items-center justify-between text-xs text-slate-600 mb-1">
              <span>Daily usage</span>
              <span><%= usedToday %> / <%= dailyLimit %> used</span>
            </div>
            <div class="h-2 w-full rounded-full bg-slate-200 overflow-hidden">
              <div class="h-full <%= noneLeft ? 'bg-rose-500' : 'bg-emerald-600' %>" style="width:<%= pct %>%"></div>
            </div>
            <% if (noneLeft) { %>
              <p class="mt-2 text-xs text-rose-600">Daily limit reached. You can create more inspections tomorrow.</p>
            <% } %>
          </div>
        <% } %>
      </div>
    </header>

    <!-- Main -->
    <main class="mx-auto max-w-6xl px-4 pb-16 space-y-6">
      <!-- Recent inspections -->
      <section class="rounded-2xl bg-white border border-slate-200 shadow-sm">
        <div class="p-6">
          <div class="flex items-center justify-between">
            <h2 class="text-lg font-semibold text-slate-900">Recent inspections</h2>
            <p class="text-sm text-slate-500"><%= total %> total</p>
          </div>

          <% if (Array.isArray(items) && items.length) { %>
            <div class="mt-4 overflow-x-auto">
              <table class="min-w-[820px] w-full text-sm">
                <thead class="bg-slate-100">
                  <tr>
                    <th class="text-left px-3 py-2">Code</th>
                    <th class="text-left px-3 py-2">VRM</th>
                    <th class="text-left px-3 py-2">Mileage</th>
                    <th class="text-left px-3 py-2">Created</th>
                    <th class="text-left px-3 py-2">Actions</th>
                  </tr>
                </thead>
                <tbody class="divide-y divide-slate-200">
                  <% items.forEach(function(i){ 
                       const isNew = !!(justCreated && i.code === justCreated);
                       const rowCls = isNew ? 'ring-2 ring-emerald-400 ring-offset-0 bg-emerald-50/40' : 'hover:bg-slate-50';
                  %>
                    <tr class="<%= rowCls %>">
                      <td class="px-3 py-2 font-mono font-medium"><%= i.code %></td>
                      <td class="px-3 py-2"><%= i.vrm %></td>
                      <td class="px-3 py-2"><%= typeof i.mileage === 'number' ? i.mileage : '—' %></td>
                      <td class="px-3 py-2"><%= new Date(i.createdAt).toLocaleString() %></td>
                      <td class="px-3 py-2">
                        <a class="inline-flex items-center gap-1 text-sky-700 hover:text-sky-900 underline"
                           href="/inspections?code=<%= i.code %>">
                          <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M5 12h13m-6-7l7 7-7 7"/></svg>
                          Open
                        </a>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>

            <!-- Pagination -->
            <% if (pagesNum > 1) { %>
              <nav class="mt-4 flex items-center justify-between" aria-label="Pagination">
                <a href="<%= pageNum > 1 ? qsp(pageNum - 1) : '#' %>"
                   class="inline-flex items-center gap-2 px-3 py-2 rounded-md border text-sm <%= pageNum > 1 ? 'border-slate-300 text-slate-700 hover:bg-slate-50' : 'border-slate-200 text-slate-400 cursor-not-allowed' %>">
                  <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor"><path d="M15 19l-7-7 7-7"/></svg>
                  Newer
                </a>
                <div class="text-sm text-slate-600">Page <%= pageNum %> of <%= pagesNum %></div>
                <a href="<%= pageNum < pagesNum ? qsp(pageNum + 1) : '#' %>"
                   class="inline-flex items-center gap-2 px-3 py-2 rounded-md border text-sm <%= pageNum < pagesNum ? 'border-slate-300 text-slate-700 hover:bg-slate-50' : 'border-slate-200 text-slate-400 cursor-not-allowed' %>">
                  Older
                  <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor"><path d="M9 5l7 7-7 7"/></svg>
                </a>
              </nav>
            <% } %>
          <% } else { %>
            <p class="mt-3 text-slate-600">No inspections yet.</p>
          <% } %>
        </div>
      </section>
    </main>

    <!-- ===== VRM Modal (Create Inspection) ===== -->
    <div id="vrmModal" class="fixed inset-0 z-50 hidden" aria-labelledby="vrmModalLabel" aria-modal="true" role="dialog">
      <div class="absolute inset-0 bg-slate-900/40 backdrop-blur-sm opacity-0 transition-opacity" data-modal-overlay></div>

      <div class="absolute inset-0 flex items-center justify-center p-4">
        <div class="w-full max-w-lg transform rounded-2xl bg-white shadow-lg border border-slate-200 opacity-0 translate-y-4 transition-all outline-none"
             data-modal-panel tabindex="-1">
          <div class="flex items-center justify-between p-4 border-b border-slate-200">
            <h3 id="vrmModalLabel" class="text-base font-semibold text-slate-900">Confirm vehicle</h3>
            <button type="button" class="p-2 rounded hover:bg-slate-100" data-close-modal aria-label="Close">
              <svg class="w-5 h-5 text-slate-600" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
                <path d="M18 6L6 18M6 6l12 12"/>
              </svg>
            </button>
          </div>

          <form id="vrmForm" class="p-4 space-y-3" hx-post="/vrm" hx-target="#vrmResult" hx-swap="innerHTML">
            <div>
              <label for="vrmInput" class="block text-sm font-medium text-slate-700">Vehicle registration (VRM)</label>
              <div class="mt-1 flex gap-2">
                <div class="relative flex-1">
                  <input
                    id="vrmInput"
                    name="vrm"
                    type="text"
                    inputmode="latin"
                    placeholder="e.g. NU59 WEP"
                    autocomplete="off"
                    autocapitalize="characters"
                    spellcheck="false"
                    required
                    pattern="[A-Z0-9\\s]{1,10}"
                    maxlength="10"
                    class="w-full rounded-lg border border-slate-300 px-3 py-2 pr-9 uppercase focus:outline-none focus:ring-2 focus:ring-sky-500" />
                  <div class="absolute inset-y-0 right-2 flex items-center" aria-hidden="true">
                    <svg class="htmx-indicator hidden w-5 h-5 animate-spin text-sky-600" viewBox="0 0 24 24" fill="none">
                      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4A4 4 0 004 12z"></path>
                    </svg>
                  </div>
                </div>
                <button type="submit" class="rounded-lg bg-sky-600 text-white px-4 py-2 font-medium hover:bg-sky-700 focus:outline-none focus:ring-2 focus:ring-sky-500">
                  Look up
                </button>
              </div>
              <p class="mt-1 text-xs text-slate-500">We’ll fetch tyre sizes and (if available) pressures for this vehicle.</p>
            </div>

            <div id="vrmResult" class="min-h-[3rem]"></div>
            <div id="vrmError" class="hidden rounded-lg border border-rose-300 bg-rose-50 text-rose-700 text-sm p-2" role="alert"></div>
          </form>
        </div>
      </div>
    </div>

    <!-- Interactions -->
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        // If we just created a doc, scroll its row into view for convenience
        (function(){
          const params = new URLSearchParams(location.search);
          const created = params.get('created');
          if (!created) return;
          const rows = Array.from(document.querySelectorAll('tbody tr'));
          const row = rows.find(tr => tr.firstElementChild?.textContent?.trim() === created);
          if (row) row.scrollIntoView({ behavior: 'smooth', block: 'center' });
        })();

        const modal = document.getElementById('vrmModal');
        const overlay = modal.querySelector('[data-modal-overlay]');
        const panel   = modal.querySelector('[data-modal-panel]');
        const openers = document.querySelectorAll('[data-open-modal]');
        const closers = modal.querySelectorAll('[data-close-modal]');
        const vrmInput = document.getElementById('vrmInput');
        const vrmForm = document.getElementById('vrmForm');
        const vrmError = document.getElementById('vrmError');

        // Prevent opening if disabled (daily limit reached)
        openers.forEach(btn => btn.addEventListener('click', (e) => {
          if (btn.hasAttribute('disabled')) { e.preventDefault(); return; }
          e.preventDefault(); openModal();
        }));

        closers.forEach(btn => btn.addEventListener('click', closeModal));
        overlay.addEventListener('click', closeModal);
        window.addEventListener('keydown', (e) => { if (e.key === 'Escape' && !modal.classList.contains('hidden')) closeModal(); });

        function openModal() {
          modal.classList.remove('hidden');
          requestAnimationFrame(() => {
            overlay.classList.remove('opacity-0');
            panel.classList.remove('opacity-0', 'translate-y-4');
            panel.focus();
            setTimeout(() => vrmInput?.focus(), 120);
          });
          document.addEventListener('keydown', trapFocus);
        }

        function closeModal() {
          overlay.classList.add('opacity-0');
          panel.classList.add('opacity-0', 'translate-y-4');
          setTimeout(() => {
            modal.classList.add('hidden');
            document.removeEventListener('keydown', trapFocus);
          }, 150);
        }

        function trapFocus(e) {
          if (modal.classList.contains('hidden') || e.key !== 'Tab') return;
          const focusables = panel.querySelectorAll('a[href], button:not([disabled]), textarea, input, select, [tabindex]:not([tabindex="-1"])');
          if (!focusables.length) return;
          const first = focusables[0], last = focusables[focusables.length - 1];
          if (e.shiftKey && document.activeElement === first) { e.preventDefault(); last.focus(); }
          else if (!e.shiftKey && document.activeElement === last) { e.preventDefault(); first.focus(); }
        }

        // Uppercase VRM while typing (preserve caret)
        document.addEventListener('input', (e) => {
          if (e.target === vrmInput) {
            const { selectionStart, selectionEnd, value } = e.target;
            const upper = value.toUpperCase();
            if (upper !== value) { e.target.value = upper; e.target.setSelectionRange(selectionStart, selectionEnd); }
          }
        });

        // HTMX scoped indicator + error
        document.body.addEventListener('htmx:beforeRequest', (evt) => {
          if (evt.target === vrmForm) {
            vrmForm.querySelector('.htmx-indicator')?.classList.remove('hidden');
            vrmError?.classList.add('hidden');
            if (vrmError) vrmError.textContent = '';
          }
        });
        document.body.addEventListener('htmx:afterOnLoad', (evt) => {
          if (evt.target === vrmForm) {
            vrmForm.querySelector('.htmx-indicator')?.classList.add('hidden');
          }
        });
        document.body.addEventListener('htmx:responseError', (evt) => {
          if (evt.target === vrmForm) {
            vrmForm.querySelector('.htmx-indicator')?.classList.add('hidden');
            if (vrmError) {
              vrmError.classList.remove('hidden');
              vrmError.textContent = "We couldn’t fetch data right now. Please check the VRM and try again.";
            }
          }
        });
      });
    </script>
  </body>
</html>
