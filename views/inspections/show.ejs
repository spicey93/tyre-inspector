<!-- views/inspections/show.ejs -->
<!DOCTYPE html>
<html lang="en" class="h-full bg-slate-50">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Inspection <%= inspection.code %></title>

    <!-- Tailwind (CDN) -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            boxShadow: { soft: '0 6px 24px rgba(0,0,0,.06)' }
          }
        }
      }
    </script>

    <style>
      /* Screen / Print visibility clamp */
      .screen-only { display: block; }
      .print-only  { display: none; }

      /* Wheel diagram dots (shared) */
      .wheel-print {
        position:absolute; width:22%; aspect-ratio:1/1; border-radius:9999px;
        transform: translate(-50%,-50%);
        border:2px solid #94a3b8; background:#fff;
        display:flex; align-items:center; justify-content:center;
        font-weight:700; font-size:10px; color:#0f172a;
        left: var(--left); top: var(--top);
      }
      .wheel-print.ok   { border-color:#15803d; background:#e7f6ec; color:#14532d; }
      .wheel-print.adv  { border-color:#f59e0b; background:#fff7d6; color:#7c5206; }
      .wheel-print.fail { border-color:#e11d48; background:#fde2e4; color:#7f1d1d; }

      /* Scroll-limited table container on desktop */
      .table-scroll { max-height: 60vh; overflow: auto; -webkit-overflow-scrolling: touch; }

      /* ---------- PRINT OPTIMIZATION ---------- */
      @media print {
        @page { size: A4 portrait; margin: 10mm; }
        html, body { background: #fff !important; }
        body * { visibility: hidden !important; }
        .print-root, .print-root * { visibility: visible !important; }
        .screen-only { display: none !important; }

        /* Compact typography + spacing for one-page fit */
        .print-root { font-size: 11px; line-height: 1.25; }
        .print-title { font-size: 16px; }
        .print-small { font-size: 11px; }

        /* Reduce paddings/margins */
        .p-print-compact { padding: 8px !important; }
        .mt-print-0 { margin-top: 0 !important; }
        .mb-print-2 { margin-bottom: 8px !important; }

        /* Table compaction */
        .table-scroll { max-height: none !important; overflow: visible !important; }
        .print-table { border-collapse: collapse; width: 100%; table-layout: fixed; }
        .print-table th, .print-table td {
          border: 1px solid #cbd5e1;
          padding: 4px 6px;
          vertical-align: top;
          word-wrap: break-word;
        }
        .print-table th { background: #f1f5f9; }

        /* Hide legend in print to save space */
        .legend-print-hide { display: none !important; }

        /* Layout: table + small diagram side-by-side */
        .print-grid {
          display: grid;
          grid-template-columns: 1fr 220px; /* table grows, diagram narrow */
          gap: 10px;
          align-items: start;
        }

        /* Trim header paddings and VRM plate size */
        .vrm-plate { transform: scale(0.9); transform-origin: left top; }
      }
    </style>
  </head>
  <body class="h-full">
    <div class="mx-auto max-w-6xl px-3 sm:px-4 py-4 sm:py-6 print:py-0">

      <!-- Back link -->
      <div class="screen-only mb-3 sm:mb-4">
        <a href="/" class="inline-flex items-center gap-2 text-slate-600 hover:text-slate-800">
          <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M15 19l-7-7 7-7"/></svg>
          Home
        </a>
      </div>

      <% /* -------------------- Helpers & derived data -------------------- */ %>
      <%
        const fmt = (v) => (v ?? "") === "" ? "—" : v;

        const computeCondition = (node) => {
          const c = node?.condition ? String(node.condition).toLowerCase() : null;
          if (c === "ok" || c === "advisory" || c === "fail") return c;
          const t = node?.treadDepth || {};
          const vals = [t.inner, t.middle, t.outer].map(Number).filter(n => !isNaN(n));
          if (!vals.length) return "—";
          if (vals.some(v => v < 2.5)) return "fail";
          if (vals.some(v => v < 4)) return "advisory";
          return "ok";
        };

        const classForCondition = (cond) =>
          cond === "ok" ? "ok" : cond === "advisory" ? "adv" : cond === "fail" ? "fail" : "";

        const tyres = {
          "Offside Front (OSF)": inspection.offside?.front || {},
          "Nearside Front (NSF)": inspection.nearside?.front || {},
          "Offside Rear (OSR)":  inspection.offside?.rear  || {},
          "Nearside Rear (NSR)": inspection.nearside?.rear || {},
        };

        const wheelPos = [
          {k:"OSF", label:"Offside Front (OSF)", left:"86%", top:"19%"},
          {k:"NSF", label:"Nearside Front (NSF)", left:"14%", top:"19%"},
          {k:"OSR", label:"Offside Rear (OSR)",  left:"86%", top:"81%"},
          {k:"NSR", label:"Nearside Rear (NSR)", left:"14%", top:"81%"},
        ];

        const createdAtStr = inspection.createdAt
          ? new Date(inspection.createdAt).toLocaleString()
          : null;

        const vehicleLine = inspection.vehicle
          ? `${inspection.vehicle.make || ''} ${inspection.vehicle.model || ''} ${inspection.vehicle.year ? `(${inspection.vehicle.year})` : ''}`.trim()
          : '';
      %>

      <!-- PRINT ROOT wraps all printable content -->
      <section class="print-root">

        <!-- Header / Summary -->
        <div class="rounded-2xl bg-white border border-slate-200 shadow-soft p-4 sm:p-5 p-print-compact mb-3 sm:mb-4 mb-print-2">
          <div class="flex flex-col gap-3 sm:gap-4 md:flex-row md:items-center md:justify-between">
            <div class="flex items-start sm:items-center gap-3 sm:gap-4">
              <!-- VRM plate -->
              <span class="vrm-plate inline-flex items-center rounded-md text-black text-sm sm:text-base font-extrabold tracking-widest px-3 py-1 select-none"
                    style="background:linear-gradient(90deg,#ffeb3b 0 74%, #1e88e5 74% 100%);">
                <%= inspection.vrm %>
                <small class="ml-2 text-white font-semibold tracking-normal">UK</small>
              </span>

              <div class="min-w-0">
                <div class="print-title text-lg sm:text-xl font-semibold text-slate-900 leading-tight truncate">Tyre Inspection Report</div>
                <div class="print-small mt-0.5 text-xs sm:text-sm text-slate-600 flex flex-wrap items-center gap-x-2 gap-y-1">
                  <span><span class="font-medium text-slate-700">Code:</span> <span class="font-mono"><%= inspection.code %></span></span>
                  <% if (typeof inspection.mileage === "number") { %>
                    <span class="text-slate-400">•</span>
                    <span><span class="font-medium text-slate-700">Mileage:</span> <%= inspection.mileage %></span>
                  <% } %>
                  <% if (createdAtStr) { %>
                    <span class="text-slate-400">•</span>
                    <span><span class="font-medium text-slate-700">Date:</span> <%= createdAtStr %></span>
                  <% } %>
                </div>
                <% if (vehicleLine || inspection.vehicle?.torque) { %>
                <div class="print-small text-xs sm:text-sm text-slate-600 mt-1 flex flex-wrap items-center gap-x-2 gap-y-1">
                  <% if (vehicleLine) { %><span><strong class="text-slate-700">Vehicle:</strong> <%= vehicleLine %></span><% } %>
                  <% if (inspection.vehicle?.torque) { %>
                    <span class="text-slate-400">•</span>
                    <span><strong class="text-slate-700">Torque:</strong> <%= inspection.vehicle.torque %> Nm</span>
                  <% } %>
                </div>
                <% } %>
              </div>
            </div>

            <!-- Actions (screen only) -->
            <div class="flex items-center gap-2 screen-only">
              <button type="button" id="copyLink"
                class="inline-flex items-center gap-2 rounded-lg border border-slate-300 px-3 py-2 text-slate-700 hover:bg-slate-50">
                <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor"><rect x="9" y="9" width="11" height="11" rx="2"/><rect x="4" y="4" width="11" height="11" rx="2"/></svg>
                Copy link
              </button>
              <button type="button" id="printBtn"
                class="inline-flex items-center gap-2 rounded-lg bg-slate-900 text-white px-3 py-2 hover:bg-slate-800">
                <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor"><path d="M6 9V3h12v6"/><path d="M6 18H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2"/><path d="M6 14h12v8H6z"/></svg>
                Print
              </button>
            </div>
          </div>

          <!-- Legend (hidden on print to save space) -->
          <div class="legend-print-hide mt-3 sm:mt-4 flex flex-wrap items-center gap-2 text-[11px] sm:text-xs">
            <span class="inline-flex items-center gap-1.5 rounded-full bg-emerald-50 text-emerald-700 px-2.5 py-1 border border-emerald-200">OK</span>
            <span class="inline-flex items-center gap-1.5 rounded-full bg-amber-50 text-amber-700 px-2.5 py-1 border border-amber-200">Advisory</span>
            <span class="inline-flex items-center gap-1.5 rounded-full bg-rose-50 text-rose-700 px-2.5 py-1 border border-rose-200">Fail</span>
          </div>
        </div>

        <!-- Content: screen = grid, print = compact grid with table + diagram -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6 mt-4 sm:mt-6 print-grid">

          <!-- Diagram (on print, right column) -->
          <div class="rounded-2xl bg-white border border-slate-200 shadow-soft p-4 p-print-compact order-2 lg:order-1">
            <h2 class="text-sm font-semibold text-slate-900 mb-3 mt-print-0">Tyre positions</h2>
            <div class="relative" style="max-width:260px;margin:0 auto;">
              <svg viewBox="0 0 400 800" class="w-full h-auto">
                <rect x="60" y="60" width="280" height="680" rx="40" fill="#f1f5f9" stroke="#cbd5e1"/>
                <rect x="80" y="80" width="240" height="120" rx="20" fill="#e2e8f0"/>
                <rect x="80" y="600" width="240" height="120" rx="20" fill="#e2e8f0"/>
                <rect x="90" y="240" width="220" height="280" rx="16" fill="#e5e7eb"/>
              </svg>
              <% for (const w of wheelPos) { 
                   const node = tyres[w.label] || {};
                   const cond = computeCondition(node);
              %>
                <div
                  class="wheel-print <%= classForCondition(cond) %>"
                  style="--left:<%= w.left %>; --top:<%= w.top %>;"
                  title="<%= w.label %> — <%= cond %>"
                ><%= w.k %></div>
              <% } %>
            </div>
          </div>

          <!-- Details (on print, left column; spans two columns on screen) -->
          <div class="lg:col-span-2 rounded-2xl bg-white border border-slate-200 shadow-soft p-0 order-1 lg:order-2">
            <!-- Mobile cards -->
            <div class="md:hidden divide-y divide-slate-200">
              <% for (const [pos, t] of Object.entries(tyres)) { const cond = computeCondition(t); %>
                <div class="p-4">
                  <div class="flex items-start justify-between gap-3">
                    <div class="font-semibold text-slate-900"><%= pos %></div>
                    <span class="text-[11px] capitalize px-2 py-0.5 rounded-full border
                      <%= cond==='ok'?'bg-emerald-50 text-emerald-700 border-emerald-200':
                          cond==='advisory'?'bg-amber-50 text-amber-700 border-amber-200':
                          cond==='fail'?'bg-rose-50 text-rose-700 border-rose-200':'bg-slate-50 text-slate-600 border-slate-200' %>"><%= cond %></span>
                  </div>
                  <dl class="mt-2 grid grid-cols-2 gap-x-3 gap-y-1.5 text-[13px]">
                    <dt class="text-slate-500">Size</dt>
                    <dd class="text-slate-900 text-right"><%= fmt(t.size) %></dd>
                    <dt class="text-slate-500">Brand</dt>
                    <dd class="text-slate-900 text-right"><%= fmt(t.brand) %></dd>
                    <dt class="text-slate-500">Model</dt>
                    <dd class="text-slate-900 text-right"><%= fmt(t.model) %></dd>
                    <dt class="text-slate-500">DOT</dt>
                    <dd class="text-slate-900 text-right"><%= fmt(t.dot) %></dd>
                    <dt class="text-slate-500">Tread</dt>
                    <dd class="text-slate-900 text-right"><%= fmt(t?.treadDepth?.inner) %> / <%= fmt(t?.treadDepth?.middle) %> / <%= fmt(t?.treadDepth?.outer) %></dd>
                  </dl>
                  <% if ((Array.isArray(t?.tags) && t.tags.length) || t?.notes) { %>
                    <div class="mt-2 space-y-1 text-xs">
                      <% if (Array.isArray(t?.tags) && t.tags.length) { %>
                        <div><strong>Tags:</strong> <%= t.tags.join(", ") %></div>
                      <% } %>
                      <% if (t?.notes) { %>
                        <div><strong>Notes:</strong> <%= t.notes %></div>
                      <% } %>
                    </div>
                  <% } %>
                </div>
              <% } %>
            </div>

            <!-- Desktop table (compact in print; scroll-limited on screen) -->
            <div class="hidden md:block">
              <div class="table-scroll rounded-2xl">
                <table class="min-w-[820px] w-full text-sm print-table">
                  <thead class="bg-slate-100 sticky top-0 z-10">
                    <tr>
                      <th class="text-left px-4 py-2">Position</th>
                      <th class="text-left px-4 py-2">Size</th>
                      <th class="text-left px-4 py-2">Brand</th>
                      <th class="text-left px-4 py-2">Model</th>
                      <th class="text-left px-4 py-2">DOT</th>
                      <th class="text-left px-4 py-2">Tread (In / Mid / Out)</th>
                      <th class="text-left px-4 py-2">Condition</th>
                    </tr>
                  </thead>
                  <tbody class="divide-y divide-slate-200">
                    <% for (const [pos, t] of Object.entries(tyres)) { const cond = computeCondition(t); %>
                      <tr class="<%= cond==='ok'?'bg-emerald-50/30':
                                   cond==='advisory'?'bg-amber-50/30':
                                   cond==='fail'?'bg-rose-50/30':'bg-white' %>">
                        <td class="px-4 py-2 font-medium text-slate-900"><%= pos %></td>
                        <td class="px-4 py-2"><%= fmt(t.size) %></td>
                        <td class="px-4 py-2"><%= fmt(t.brand) %></td>
                        <td class="px-4 py-2"><%= fmt(t.model) %></td>
                        <td class="px-4 py-2"><%= fmt(t.dot) %></td>
                        <td class="px-4 py-2"><%= fmt(t?.treadDepth?.inner) %> / <%= fmt(t?.treadDepth?.middle) %> / <%= fmt(t?.treadDepth?.outer) %></td>
                        <td class="px-4 py-2">
                          <span class="inline-flex items-center text-xs capitalize px-2 py-0.5 rounded-full border
                            <%= cond==='ok'?'bg-emerald-50 text-emerald-700 border-emerald-200':
                                cond==='advisory'?'bg-amber-50 text-amber-700 border-amber-200':
                                cond==='fail'?'bg-rose-50 text-rose-700 border-rose-200':'bg-slate-50 text-slate-600 border-slate-200' %>"><%= cond %></span>
                        </td>
                      </tr>
                      <!-- NOTE: In print we do NOT render extra tag/notes rows to save space -->
                    <% } %>
                  </tbody>
                </table>
              </div>
            </div>
          </div> <!-- /details -->
        </div> <!-- /content -->
      </section>
    </div>

    <script>
      (function () {
        // Copy link
        const copyBtn = document.getElementById("copyLink");
        if (copyBtn) {
          copyBtn.addEventListener("click", async () => {
            const url = new URL(window.location.origin + "/inspections");
            url.searchParams.set("code", "<%= inspection.code %>");
            try {
              await navigator.clipboard.writeText(url.toString());
              copyBtn.innerHTML = '<svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path d="M20 6L9 17l-5-5"/></svg> Copied';
              setTimeout(() => (copyBtn.textContent = "Copy link"), 1500);
            } catch {
              prompt("Copy this link:", url.toString());
            }
          });
        }

        // Robust print trigger
        const printBtn = document.getElementById("printBtn");
        if (printBtn) {
          printBtn.addEventListener("click", (e) => {
            e.preventDefault();
            window.focus();
            requestAnimationFrame(() => setTimeout(() => window.print(), 0));
          });
        }
      })();
    </script>
  </body>
</html>
